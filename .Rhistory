d <- read.csv(file="all_summary.csv", nrows=15)
d
d <- read.csv(file="all_summary.csv")
head(d)
library(dplyr)
select(d, title)
filter(d, chain_id == "C")
?read.csv
d <- read.csv(file="all_summary.csv", sep=";")
select(d, title)
Sys.Date()
forbidden_values <- c(“DA”,“DC”,“DT”, “DU”, “DG”, “DI”,“UNK”, “UNX”, “UNL”, “PR”, “PD”, “Y1”, “EU”, “N”, “15P”, “UQ”, “PX4”,“NAN”)
head(d)
head(select(d,res_name),30)
head(select(d,res_name),50)
forbidden_values <- c("DA","DC","DT", "DU", "DG", "DI","UNK", "UNX", "UNL", "PR", "PD", "Y1", "EU", "N", "15P", "UQ", "PX4", "NAN")
forbidden_values <- c("DA","DC","DT", "DU", "DG", "DI","UNK", "UNX", "UNL", "PR", "PD", "Y1", "EU", "N", "15P", "UQ", "PX4", "NAN", "MN")
head((filter(d, res_name != any(forbidden_values) %>% select(res_name)),50)
my_test <-head(d, 50)
filter(my_test, res_name != any(forbidden_values)) %>% select(res_name)
?in
my_test %>% filter(res_name != any(forbidden_values)) %>% select(res_name)
my_test
library(dplyr)
select(my_test, res_name)
filter(my_test, res_name != "K")
filter(my_test, res_name != "K") %>% select(res_name)
x <- c("K", "HDD")
x
filter(my_test, res_name != any(x)) %>% select(res_name)
filtered <- filter(my_test, res_name !%in% x)
filtered <- filter(my_test, res_name %in% x)
filtered <- filter(my_test, res_name ! %in% x)
filtered <- filter(my_test, !(res_name %in% x)
)
select(my_test, res_name)
select(filtered, res_name)
my_test
select(my_test, res_name, pdb_code)
unique_values <- filter(my_test, unique(pdb_code, res_name))
unique_values <- unique(my_test, [,c("pdb_code", "res_name")])
unique_values <- unique(my_test[,c("pdb_code", "res_name")])
unique_values
library(knitr)
kable(summary(my_test))
unique_values
my_test
f <- filter(my_test, unique(res_names))
f <- filter(my_test, unique(res_name))
library(plyr)
?ddply
unique_values
my_test
head(my_test)
View(my_test)
head(my_test)
head(my_test, 3)
mutate(my_test, key_value=paste(pdb_code, res_name, sep=" " ))
paste("H", "i", sep="")
test2 <- unique(my_test[list(pdb_code, res_name), allow.cartesian=TRUE])
head(my_test, 30)
select(my_test, res_name, pdb_code)
?summarize
?summary
colnames(my_test)
install.packages(reshape2)
install.packages('reshape2')
library(reshape2)
install.packages('reshape2')
library(reshape2)
install.packages('corrplot')
install.packages('corrplot')
library(corrplot)
?matplot
?matplot
head(numeric_columns)
install.packages("reshape2")
?class
?levels
?droplevels
?droplevels.data.frame
<a href="#zad4">Podsumowanie kolumn</a>
?confusionMatrix
